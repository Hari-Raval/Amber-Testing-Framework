import os
import pdb
import re


devices = ["Quadro RTX 4000", "A14", "A12"]

device_alias = {"Quadro RTX 4000": "CUDA/toucan_quadro_rtx4000-inter-workgroup.csv",
                "A14" : "Apple/iphone_12_a14-inter-workgroup.csv",
                "A12" : "Apple/ipad_air_3_a12-inter-workgroup.csv"}

config = ["2_thread_2_instruction",
          "2_thread_3_instruction",
          "2_thread_4_instruction",
          "3_thread_3_instruction",
          "3_thread_4_instruction"]

base_path = "../../Driver_and_Comparator_Results/"

def get_data(fname):
    f = open(fname, 'r')
    ret = f.read()
    f.close()
    return ret

def find_ff_d_tests(c):
    ret = []
    p = os.path.join(base_path,c,"schedulers/LOBE_results.csv")
    data = get_data(p).split("\n")[1:-2]
    for t in data:
        if "P" in t:
            num = int(t.split(",")[0])
            ret.append(num)

    return ret

def get_failed_and_total(s):
    tt = re.match('.*\((\d+)/(\d+)\).*',s)
    assert(tt)
    return int(tt[1]),int(tt[2])

def check_res(res):
    res = res.split(",")[3]
    if "P" in res:
        return "P"
    f,t = get_failed_and_total(res)
    if f == t:
        return "D"
    return "N"

for c in config:
    r = find_ff_d_tests(c)
    c_d = 0
    for d in devices:
        dp = device_alias[d]
        p = os.path.join(base_path, c, dp)
        data = get_data(p).split("\n")
        if "Total" not in data[-1]:
            assert("Total" in data[-1])
        data = data[1:-1]
        for t in r:
            v = check_res(data[t])
            if v in ["N", "D"]:
                assert(False)
                #if v == "P":
                #print("passed:",c,d,t)
                #if v == "D":
                #c_d += 1

        print("total:", d, c_d)
